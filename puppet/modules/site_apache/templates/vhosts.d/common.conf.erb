<VirtualHost *:80>
  ServerName <%= domain %>
  ServerAlias www.<%= domain %>
  RewriteEngine On
  RewriteRule ^.*$ https://<%= domain -%>%{REQUEST_URI} [R=permanent,L]
  CustomLog ${APACHE_LOG_DIR}/other_vhosts_access.log common
</VirtualHost>

<VirtualHost *:443>
  ServerName <%= domain_name %>
  ServerAlias <%= domain %>
  ServerAlias www.<%= domain %>
  CustomLog ${APACHE_LOG_DIR}/other_vhosts_access.log common

  SSLEngine on
  SSLProtocol all -SSLv2 -SSLv3
  SSLHonorCipherOrder on
  SSLCompression off
  SSLCipherSuite "ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128:AES256:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!3DES:!MD5:!PSK"

  SSLCACertificatePath /etc/ssl/certs
  SSLCertificateChainFile <%= scope.lookupvar('x509::variables::local_CAs') %>/<%= scope.lookupvar('site_config::params::commercial_ca_name') %>.crt
  SSLCertificateKeyFile <%= scope.lookupvar('x509::variables::keys') %>/<%= scope.lookupvar('site_config::params::commercial_cert_name') %>.key
  SSLCertificateFile <%= scope.lookupvar('x509::variables::certs') %>/<%= scope.lookupvar('site_config::params::commercial_cert_name') %>.crt

  RequestHeader set X_FORWARDED_PROTO 'https'

  <IfModule mod_headers.c>
<% if (defined? @services) and (@services.include? 'webapp') and (@webapp['secure']) -%>
    Header always set Strict-Transport-Security "max-age=31536000; includeSubDomains"
<% end -%>
    Header always unset X-Powered-By
    Header always unset X-Runtime
  </IfModule>

<% if (defined? @services) and (@services.include? 'webapp') -%>
  DocumentRoot /srv/leap/webapp/public

  RewriteEngine On
  # Check for maintenance file and redirect all requests
  RewriteCond %{DOCUMENT_ROOT}/system/maintenance.html -f
  RewriteCond %{SCRIPT_FILENAME} !maintenance.html
  RewriteCond %{REQUEST_URI} !/images/maintenance.jpg
  RewriteRule ^.*$ %{DOCUMENT_ROOT}/system/maintenance.html [L]

  # http://www.modrails.com/documentation/Users%20guide%20Apache.html#_passengerallowencodedslashes_lt_on_off_gt
  AllowEncodedSlashes on
  PassengerAllowEncodedSlashes on
  PassengerFriendlyErrorPages off
  SetEnv TMPDIR /var/tmp

  # Allow rails assets to be cached for a very long time (since the URLs change whenever the content changes)
  <Location /assets/>
    Header unset ETag
    FileETag None
    ExpiresActive On
    ExpiresDefault "access plus 1 year"
  </Location>
<% end -%>


<% if (defined? @services) and (@services.include? 'monitor') -%>
 <DirectoryMatch (/usr/share/nagios3/htdocs|/usr/lib/cgi-bin/nagios3|/etc/nagios3/stylesheets)>
 <% if (defined? @services) and (@services.include? 'webapp') -%>
    PassengerEnabled off
 <% end -%>
    AllowOverride all
    # Nagios won't work with setting this option to "DENY",
    # as set in conf.d/security (#4169). Therefor we allow
    # it here, only for nagios.
    Header set X-Frame-Options: "ALLOW"
  </DirectoryMatch>
<% end -%>
</VirtualHost>

